# Generated by Django 2.0.1 on 2018-01-29 15:11

from django.contrib.auth.models import User
from django.db import migrations, models


def create_superuser(apps, schema_editor):
    User.objects.create_superuser(username='pdas3', password='asdfghjkl', email='Pujashree.Das@mrcooper.com')
    User.objects.create_superuser(username='kr5', password='asdfghjkl', email='Keerthana.R@mrcooper.com')
    User.objects.create_superuser(username='common', password='commonpassword', email='Keerthana.R@mrcooper.com')
    # User.objects.create_user(username='admin@spart', password='spartadmin@mrc', email='')
    
def make_permissions(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")
    from django.contrib.auth.management import create_permissions
    from django.apps import apps
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, verbosity=0)
        app_config.models_module = None
    
def register_permissions(apps, schema_editor):
    from django.contrib.auth.models import User, Permission
    from django.contrib.contenttypes.models import ContentType
    from django.shortcuts import get_object_or_404

    content_type = ContentType.objects.get_for_model(User)
    permission = Permission.objects.create(
        codename='can_create_or_remove',
        name='Can Create or Remove Users',
        content_type=content_type,
    )

    user = get_object_or_404(User, pk=2)
    user.user_permissions.add(permission)
    # user = get_object_or_404(User, pk=1)
    # user.user_permissions.add(permission)

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0021_auto_20180119_1656'),
    ]

    operations = [
        migrations.RunPython(create_superuser),
        migrations.RunPython(make_permissions),
        migrations.RunPython(register_permissions),
    ]
